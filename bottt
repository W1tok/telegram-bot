import math
import requests
import telebot
from telebot import types
from telebot.types import InlineKeyboardMarkup
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardButton
import os
from dotenv import load_dotenv
import choice

load_dotenv()

TOKEN = os.getenv('TELEGRAM_TOKEN')
bot = telebot.TeleBot(TOKEN)
ret = ""


class User:
    def __init__(self, name, phone_number, telegram_id):
        self.name = name
        self.phone_number = phone_number
        self.telegram_id = telegram_id
        self.money = 0
        self.podpiska = False


users = {}
urll = "https://t.me/bochenskiy"


@bot.message_handler(commands=['help'])
def helping(message):
    bot.send_message(message.chat.id, "/start - регестрация")
    bot.send_message(message.chat.id, "/buy - найти место")
    bot.send_message(message.chat.id,
                     "/helpme - что бы найти нужное место, пройдите регистрацию, далее напишите команду /buy и следуйте инструкцям бота")
    bot.send_message(message.chat.id, "/help - помощь с ботом")


@bot.message_handler(commands=['helpme'])
def helping(message):
    bot.send_message(message.chat.id,
                     "helpme - что бы найти нужное место, пройдите регистрацию, далее напишите команду /buy и следуйте инструкцям бота")


def knopka():
    markup = types.InlineKeyboardMarkup(row_width=True)
    link_keyboard1 = types.InlineKeyboardButton(text="1-й Канал", url=urll)
    check_keyboard = types.InlineKeyboardButton(text="Проверить", callback_data="check")
    markup.add(link_keyboard1, check_keyboard)
    return markup


@bot.message_handler(commands=['start'])
def handle_start(message):
    chat_id = message.chat.id
    bot.send_message(chat_id, 'Привет! Для начала работы с ботом, пожалуйста, предоставьте следующую информацию:')
    bot.send_message(chat_id, 'Введите ваше имя:')
    bot.register_next_step_handler(message, handle_name, chat_id)


def handle_name(message, chat_id):
    name = message.text
    bot.send_message(chat_id, 'Отправьте нам свой номер телефона')
    # Создаем кнопку для отправки номера телефона
    button = types.KeyboardButton(text="Отправить номер телефона", request_contact=True)
    keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    keyboard.add(button)
    bot.send_message(message.chat.id, "Нажмите кнопку, чтобы отправить номер телефона", reply_markup=keyboard)
    bot.register_next_step_handler(message, handle_phone_number, chat_id, name)


def handle_phone_number(message, chat_id, name):
    phone_number = message.contact.phone_number
    bot.send_message(chat_id, 'Введите ваш ID аккаунта Telegram:')
    bot.register_next_step_handler(message, handle_telegram_id, chat_id, name, phone_number)


def handle_telegram_id(message, chat_id, name, phone_number):
    keyboard = ReplyKeyboardMarkup(row_width=2)
    telegram_id = message.text
    user = User(name, phone_number, telegram_id)
    users[chat_id] = user
    bot.send_message(chat_id, f'Регистрациия закончена.Благодарим вас за предоставленную информацию!')
    bot.send_message(chat_id,
                     f"Ваши данные: Имя:{user.name}, Номер телефона:{user.phone_number}, Телеграмм айди:{user.telegram_id}")
    yes_button = KeyboardButton("Да")
    no_button = KeyboardButton("Нет")
    keyboard.add(yes_button, no_button)
    bot.send_message(chat_id, "Ваши данные верные?", reply_markup=keyboard)
    bot.register_next_step_handler(message, result_yes_or_no, user)


def result_yes_or_no(message, user):
    result = message.text
    if result == "Да":
        bot.send_message(message.chat.id, f"Отлично,{user.name}.Давайте продолжим работу с ботом!")
    elif result == "Нет":
        bot.send_message(message.chat.id,
                         f"Увы, но вам придется пройти регистрацию заново.В этот раз не ошибитесь,{user.name}")


@bot.message_handler(commands=["podpiska"])
def start(message):
    chat_id = message.chat.id
    bot.send_message(chat_id, "Проверим подписку на канал", reply_markup=knopka())


def check(call):
    status = ["member", "administrator", "creator"]
    for i in status:
        if i == bot.get_chat_member(chat_id="-1001596619527", user_id=call.message.chat.id).status:
            bot.send_message(call.message.chat.id, "Спасибо!")
            user.podpiska = True
            break
    else:
        bot.send_message(call.message.chat.id, "Подпишитесь на канал!", reply_markup=knopka())


@bot.callback_query_handler(func=lambda call: True)
def callback(call):
    if call.data == 'check':
        bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.id)
        check(call)


@bot.message_handler(commands=['search'])
def choosing_a_category(message):
    chat_id = message.chat.id
    keyboard = ReplyKeyboardMarkup(row_width=2, row_height=2)
    # Создание четырех кнопок
    fast_food_button = KeyboardButton("Фаст-Фуд")
    apteka_button = KeyboardButton("Аптека")
    magazinu_button = KeyboardButton("Магазин")
    drygoe_button = KeyboardButton("Другое")
    keyboard.add(fast_food_button, apteka_button, magazinu_button, drygoe_button)
    bot.register_next_step_handler(message, check_result)


def check_result(message):
    result = message.text
    poisk = ""
    if result == 'Фаст-Фуд':

        choice.Fast_Food()
        res = message.text
        if res == "Вкусно и Точка":
            poisk = "Вкусно и Точка"
        elif res == "Бурген Кинг":
            poisk = "Бурген Кинг"
        elif res == "КФС":
            poisk = "КФС"
        elif res == "Другое":
            poisk = ""

    elif result == 'Аптека':
        pass

    elif result == 'Магазин':
        pass

    elif result == 'Другое':
        pass







































bot.polling()
